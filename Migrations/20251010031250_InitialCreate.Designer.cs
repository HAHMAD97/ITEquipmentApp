// <auto-generated />
using System;
using ITEquipmentBorrowApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ITEquipmentBorrowApp.Migrations
{
    [DbContext(typeof(FastEquipmentContext))]
    [Migration("20251010031250_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("ITEquipmentBorrowApp.Models.ITEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("ITEquipmentBorrowApp.Models.ITEquipmentRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EquipmentType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestDetails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ITEquipmentBorrowApp.Models.ITEquipmentRequest", b =>
                {
                    b.OwnsOne("ITEquipmentBorrowApp.Models.Borrow", "Borrow", b1 =>
                        {
                            b1.Property<int>("ITEquipmentRequestId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("DurationDays")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ITEquipmentRequestId");

                            b1.ToTable("Requests");

                            b1.WithOwner()
                                .HasForeignKey("ITEquipmentRequestId");
                        });

                    b.OwnsOne("ITEquipmentBorrowApp.Models.Requester", "Requester", b1 =>
                        {
                            b1.Property<int>("ITEquipmentRequestId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<int>("Role")
                                .HasColumnType("INTEGER");

                            b1.HasKey("ITEquipmentRequestId");

                            b1.ToTable("Requests");

                            b1.WithOwner()
                                .HasForeignKey("ITEquipmentRequestId");
                        });

                    b.Navigation("Borrow")
                        .IsRequired();

                    b.Navigation("Requester")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
